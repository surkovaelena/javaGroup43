package les_18;

public class Main {
    public static void main(String[] args) {

/**
 * Игра BlackJack
 * Цель заключается в том, чтобы набрать как можно больше очков, но не более 21 и обыграть нужно крупье.
 * В игре используется от одной до восьми колод. Из-за того что вероятность комбинации блек-джек при большем
 * числе колод ниже, то преимущество игрока уменьшается при увеличении числа колод. При игре с шаффл-машинкой
 * считается, что используется бесконечная колода.
 *
 * Значения очков каждой карты:
 *      от двойки до десятки — от 2 до 10 соответственно;
 *      у туза — 1 или 11 (11 пока общая сумма не больше 21, далее 1);
 *      у т. н. картинок (король, дама, валет) — 10;
 *
 * Если у игрока и дилера число очков на руках равное, то такая ситуация называется «ровно»: за рубежом это
 * называется — пуш (англ. push). В такой ситуации все остаются при своих ставках, никто не выигрывает и не
 * проигрывает. Хотя в казино бывают исключения, и при «push» выигрывает казино
 */
/**
 * Решение
 * 1. Создаем объект игры с интерфейсным типом, затем создаем интерфейс IGameBJ и класс GameBJ, impl добавляется сам.
 * 2. Создаем двух игроков. Затем создаем интерфейс IPlayerBJ и класс PlayerBJ.
 * 3. Создаем крупье croupierBJ. Затем создаем класс CroupierBJ. extends PlayerBJ
 * 4. Добавим в игру игроков и крупье. Creat addPlayerInGamegameBJ() IGameBJ. Лампа - метод в IGameBJ, далее переход в класс и реализация метода
 * 5. class GameBJ - Далее, чтобы начать играть нужна колода карт, нужно создать её в классе GameBJ
 * 6. class DeckJB - Далее нужны карты в колоде, в классе DeckJB в конструктор создания объекта добавить массив карт
 * 7. Теперь можно раздать по два карты из колоды игрокам gameBJ.twoCArdsOnStartForEach();
 * 8. Далее нужно раздавать по одной карте игрокам, если им требуется
 * 9. Осталось определить победителя
 */

//1
        IGameBJ gameBJ =new GameBJ();
//        IGameBJ game2 =new GameBJChilfen();
//        IGameBJ[]iGameBJS =new IGameBJ[2];
//                iGameBJS[0] = gameBJ;
//                iGameBJS[1]=game2;
//game2.equals();
//gameBJ.equals();
gameBJ.determineWinner();


    }
}
